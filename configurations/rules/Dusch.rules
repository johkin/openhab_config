import org.joda.time.*
import org.openhab.model.script.actions.Timer
import org.openhab.core.library.types.DecimalType
import org.openhab.core.library.types.DateTimeType
import org.openhab.core.library.items.SwitchItem

val Integer nightLevel = 15
val Integer dayLevel = 80
val Integer minutesOn = 10

var Integer level

rule "Dusch, Initiering"
when
	System started
then
	if (Mode.state == 1) {
		level = nightLevel
	} else {
		level = dayLevel
	}
end	

rule "Dusch, Släck med schema"
when
	Time cron "0 */5 * ? * *"
then
	if (Shower_Motion_Sensor.state == CLOSED) {
		logDebug("dusch", "Kontrollera senaste rörelse {}", Shower_Motion_Sensor.lastUpdate)
		val Period delayPeriod = new Period().withMinutes(minutesOn)
		val lastUpdate = new DateTime(Shower_Motion_Sensor.lastUpdate)
		
		if (lastUpdate.plus(delayPeriod).beforeNow) {
			if (Shower_Dimmer.state != 0) {
				logDebug("dusch", "Släcker belysning")
				sendCommand(Shower_Dimmer, OFF)	
			}
		}	
	}
end

rule "Dusch, Tänd dusch vid rörelse"
when
	Item Shower_Motion_Sensor changed to OPEN
then
	logDebug("dusch", "Shower_Motion_Sensor.state {}", Shower_Motion_Sensor.state)
	logDebug("dusch", "Shower_Dimmer.state {}", Shower_Dimmer.state)
	if (Shower_Dimmer.state == 0){
		logDebug("dusch", "Tänder belysning: {}", level)
		sendCommand(Shower_Dimmer, level)	
	}
	
end	

rule "Dusch, Justera ljusstyrka vid ändring av läge"
when
	Item Mode changed
then
	logDebug("dusch", "Justera ljusstyrka Mode.state {}", Mode.state)
	if (Mode.state == 1) {
		level = nightLevel
	} else {
		level = dayLevel
	}
	logDebug("dusch", "Justera ljusstyrka level {}", level)
	logDebug("dusch", "Justera ljusstyrka Shower_Dimmer.state {}", Shower_Dimmer.state)
	if (Shower_Dimmer.state != 0) {
		sendCommand(Shower_Dimmer, level)	
	}
end

rule "Dusch, Avsluta timer om belysning släcks"
when 
	Item Shower_Dimmer changed
then
	
	logDebug("dusch", "Shower_Dimmer.state {}", Shower_Dimmer.state)
	if (Shower_Dimmer.state == 0) {

	} else {
		level = (Shower_Dimmer.state as DecimalType).intValue
		logDebug("dusch", "Stored new dimmer level {}", level)
	}
end